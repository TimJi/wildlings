{"version":3,"sources":["components/customer/api.tsx","components/userForm/index.tsx","components/customer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getCustomerList","a","axios","get","res","status","data","map","user","key","id","personalId","name","getCustomerDetail","result","Step","Item","Group","UserForm","create","visible","onCancel","onSummit","customerDetail","form","useState","currentStep","setCurrentStep","sliderRef","useRef","getFieldDecorator","useEffect","customer","console","warn","setFieldsValue","modalWidth","document","body","clientWidth","current","goTo","onOk","title","okText","cancelText","width","destroyOnClose","afterClose","onChange","description","onSubmit","ref","initialSlide","adaptiveHeight","span","label","labelCol","wrapperCol","rules","required","message","size","type","initialValue","style","value","Search","Customer","users","setUsers","filterNameOrId","setFilterNameOrId","customerCache","setCustomerCache","userFormVisible","setUserFormVisible","setCustomerDetail","handleCancel","useCallback","handleSummit","columns","dataIndex","align","render","text","record","index","onClick","fetchData","newUsers","filter","String","includes","placeholder","enterButton","onSearch","log","e","target","dataSource","Header","Sider","Content","App","collapsed","setCollapsed","pathname","window","location","toggleCollapsed","prevCollapsed","About","Users","height","trigger","collapsible","className","theme","mode","defaultSelectedKeys","to","background","paddingLeft","margin","padding","minHeight","path","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.wildlings.chunk.js","sourcesContent":["import axios from 'axios';\nimport { IUser, ICustomerCourseDetail } from '../interface';\n\nexport const getCustomerList = async (): Promise<IUser[]> => {\n  const res = await axios.get('/api/Customer');\n  if (res.status === 200) {\n    const { data } = res;\n    return data.map(\n      (user: { id: number; personalId: string; name: string }) => {\n        const { id, personalId, name } = user;\n        const newUser: IUser = {\n          key: id,\n          id: personalId,\n          name: name,\n        };\n        return newUser;\n      }\n    );\n  }\n  return [];\n};\nexport const getCustomerDetail = async (\n  id?: number\n): Promise<ICustomerCourseDetail> => {\n  const res = await axios.get(`/api/Customer/${id}`);\n  // if (res.status === 200) {\n  const result: ICustomerCourseDetail = res.data;\n  return result;\n  // }\n};\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport {\n  Carousel,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Modal,\n  Steps,\n  Checkbox\n} from 'antd';\nimport { IUserForm } from '../interface';\nimport './index.sass';\nconst { Step } = Steps;\nconst { Item } = Form;\nconst { Group } = Checkbox;\n\nconst _UserForm: FC<IUserForm> = ({\n  visible,\n  onCancel,\n  onSummit,\n  customerDetail,\n  form\n}: IUserForm) => {\n  //   const [users, setUsers] = useState<Array<IUser>>([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const sliderRef = useRef<Carousel>(null);\n  const { getFieldDecorator } = form;\n\n  useEffect(() => {\n    if (customerDetail) {\n      const {\n        customer\n        //  courseDetail\n      } = customerDetail;\n      console.warn(customer);\n      // customer 多塞的資料 => error log\n      // medicalCase\n      // id\n      form.setFieldsValue({ ...customer });\n    }\n  }, [customerDetail]);\n  const modalWidth = document.body.clientWidth / 1.6;\n  useEffect(() => {\n    sliderRef!.current && sliderRef.current.goTo(currentStep, false);\n  }, [currentStep]);\n  return (\n    <Modal\n      visible={visible}\n      onCancel={onCancel}\n      onOk={onSummit}\n      title=\"會員資料\"\n      okText=\"完成\"\n      cancelText=\"取消\"\n      width={modalWidth}\n      destroyOnClose\n      afterClose={(): void => setCurrentStep(0)}\n    >\n      <Steps current={currentStep} onChange={setCurrentStep}>\n        <Step title=\"基本資料\" description=\"Applicant Details\" />\n        <Step title=\"法定代理人核准\" description=\"Guardian's Consent\" />\n        <Step title=\"契約內容與免責聲明\" description=\"\" />\n      </Steps>\n      <Divider />\n      <Form onSubmit={onSummit}>\n        <Carousel ref={sliderRef} initialSlide={currentStep} adaptiveHeight>\n          <div>\n            <Col span={12}>\n              <Item\n                label=\"會員姓名\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('name', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '請輸入會員姓名'\n                    }\n                  ]\n                })(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"會員綽號\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('nickname', {})(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"身分證字號\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('personalId', { rules: [{ required: true }] })(\n                  <Input size=\"large\" />\n                )}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"E-mail\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: '不是正確的 email 格式'\n                    }\n                  ]\n                })(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"聯絡電話\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('phone', {\n                  rules: [{ required: true, message: '請輸入聯絡電話' }]\n                })(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"出生日期\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('birthday')(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"緊急聯絡人\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('emergencyContact', {\n                  rules: [{ required: true, message: '請輸入緊急聯絡人' }]\n                })(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"聯絡人電話\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('emergencyPhone', {\n                  rules: [{ required: true, message: '請輸入聯絡人電話' }]\n                })(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={24}>\n              <Item\n                label=\"地址\"\n                labelCol={{ span: 3 }}\n                wrapperCol={{ span: 21 }}\n              >\n                {getFieldDecorator('address')(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n          </div>\n          <div>\n            <Col span={12}>\n              <Item\n                label=\"代理人姓名\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('guardianName', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '請輸入代理人姓名'\n                    }\n                  ]\n                })(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"身分證字號\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('guardianPersonalId', { rules: [{ required: true }] })(\n                  <Input size=\"large\" />\n                )}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"聯絡電話\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('guardianPhone', {\n                  rules: [{ required: true, message: '請輸入聯絡電話' }]\n                })(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n            <Col span={12}>\n              <Item\n                label=\"出生日期\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 18 }}\n              >\n                {getFieldDecorator('guardianBirthday')(<Input size=\"large\" />)}\n              </Item>\n            </Col>\n          </div>\n          <div>\n            <h3>\n              <Col span={24}>\n                <Item>\n                  1.\n                  您必須在此確認，關於身體狀況及使用健身器材的能力，在您加入之前無任何醫藥方面的建議，若目前有任何健康與醫療方面的任何顧慮，可能會影響您的健身計畫，請您在上課之前與專業醫師討論。\n                </Item>\n              </Col>\n              <Col span={24}>\n                <Item>\n                  {getFieldDecorator('checkbox-group', {\n                    initialValue: []\n                  })(\n                    <Group style={{ width: '100%' }}>\n                      <Checkbox value=\"A\">\n                        <span>心臟疾病</span>\n                      </Checkbox>\n                      <Checkbox value=\"B\">\n                        <span>低血壓 / 高血壓</span>\n                      </Checkbox>\n                      <Checkbox value=\"C\">\n                        <span>低血糖 / 糖尿病</span>\n                      </Checkbox>\n                      <Checkbox value=\"D\">\n                        <span>內分泌失調</span>\n                      </Checkbox>\n                      <Checkbox value=\"E\">\n                        <span>暈眩</span>\n                      </Checkbox>\n                      <Checkbox value=\"F\">\n                        <span>懷孕中 / 產後未超過一年</span>\n                      </Checkbox>\n                      <Checkbox value=\"G\">\n                        <span>關節狀況 / 受傷</span>\n                      </Checkbox>\n                      <Checkbox value=\"H\">\n                        <span>曾有重大手術</span>\n                      </Checkbox>\n                      <Checkbox value=\"I\">\n                        <span>中風</span>\n                      </Checkbox>\n                      <Checkbox value=\"J\">\n                        <span>上述未涉及之醫療狀況</span>\n                      </Checkbox>\n                    </Group>\n                  )}\n                </Item>\n              </Col>\n              <Col span={24}>\n                <Item>\n                  2.\n                  遵守現場教練指導，申請人在課程進行中隨時可以停止與休息，維護自己健康並未自身的健康問題承擔所有風險。\n                </Item>\n              </Col>\n              <Col span={24}>\n                <Item>\n                  3.\n                  需著運動服裝，拳擊區不可穿鞋，重訊區虛換乾淨運動鞋並攜帶毛巾。\n                </Item>\n              </Col>\n              <Col span={24}>\n                <Item>4. 管場內禁止飲食，水及運動飲料不在此限至內。</Item>\n              </Col>\n              <Col span={24}>\n                <Item>\n                  5. 器材勿重摔，用必請歸回原位；惡意損毀器材者，將照價賠償。\n                </Item>\n              </Col>\n              <Col span={24}>\n                <Item>\n                  6. 申請人在外地與他人發生鬥毆、打架等事件與本場館及教練無關。\n                </Item>\n              </Col>\n              <Col span={24}>\n                <Item>\n                  7.\n                  您在此確認已充分閱讀，理解和同意其中全部條款，即表示即日起同意本聲明內容。\n                </Item>\n              </Col>\n              <Col span={24}>\n                <Item>8. 野人格鬥體適能保有更改上述聲明事項內容之權利。</Item>\n              </Col>\n            </h3>\n          </div>\n        </Carousel>\n      </Form>\n    </Modal>\n  );\n};\nconst UserForm = Form.create<IUserForm>({ name: 'form_in_modal' })(_UserForm);\nexport default UserForm;\n","import React, { FC, useState, useEffect, useCallback } from 'react';\nimport { Input, Card, Table, Icon, Button } from 'antd';\nimport { ColumnProps } from 'antd/es/table';\n\nimport { getCustomerList, getCustomerDetail } from './api';\nimport { IUser, ICustomerCourseDetail } from '../interface';\nimport UserForm from '../userForm';\nconst { Search } = Input;\n\nconst Customer: FC = () => {\n  const [users, setUsers] = useState<Array<IUser>>([]);\n  const [filterNameOrId, setFilterNameOrId] = useState('');\n  const [customerCache, setCustomerCache] = useState<Array<IUser>>([]);\n  const [userFormVisible, setUserFormVisible] = useState(false);\n  const [customerDetail, setCustomerDetail] = useState<ICustomerCourseDetail>();\n\n  const handleCancel = useCallback(() => setUserFormVisible(false), []);\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const handleSummit = useCallback(() => {}, []);\n  const columns: ColumnProps<IUser>[] = [\n    {\n      title: '姓名',\n      dataIndex: 'name',\n      key: 'name',\n      align: 'center',\n      // eslint-disable-next-line\n      render: (text, record, index) => {\n        // eslint-disable-next-line\n        const { id, name, key } = record;\n        return (\n          <Button\n            onClick={async (): Promise<void> => {\n              setCustomerDetail(await getCustomerDetail(key));\n              setUserFormVisible(true);\n            }}\n            type=\"link\"\n            size=\"large\"\n          >\n            {text}\n          </Button>\n        );\n      },\n    },\n    {\n      title: '身分證字號',\n      dataIndex: 'id',\n      key: 'id',\n      align: 'center',\n    },\n  ];\n\n  useEffect(() => {\n    const fetchData = async (): Promise<void> => {\n      const result: Array<IUser> = await getCustomerList();\n      setCustomerCache(result);\n      setUsers(result);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const newUsers: IUser[] = customerCache.filter(\n      customer =>\n        String(customer.name!).includes(filterNameOrId) ||\n        String(customer.id!).includes(filterNameOrId)\n    );\n    setUsers(newUsers);\n  }, [filterNameOrId]);\n\n  return (\n    <Card\n      title={\n        <Search\n          placeholder=\"輸入姓名或身分證字號\"\n          enterButton={\n            <>\n              <Icon type=\"user-add\" />\n              新增\n            </>\n          }\n          size=\"large\"\n          onSearch={(value): void => {\n            console.log('new user', value);\n            setUserFormVisible(true);\n          }}\n          onChange={(e): void => setFilterNameOrId(e.target.value)}\n        />\n      }\n    >\n      <Table<IUser> columns={columns} dataSource={users} />\n\n      <UserForm\n        visible={userFormVisible}\n        onCancel={handleCancel}\n        onSummit={handleSummit}\n        customerDetail={customerDetail}\n      />\n    </Card>\n  );\n};\n\nexport default Customer;\n","import React, { FC, useState, useCallback } from 'react';\nimport './App.scss';\nimport { Menu, Icon, Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Customer from './components/customer';\nconst { Header, Sider, Content } = Layout;\nconst { Item } = Menu;\n\nconst App: FC = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const pathname = window.location.pathname;\n\n  const toggleCollapsed = useCallback(\n    () => setCollapsed(prevCollapsed => !prevCollapsed),\n    []\n  );\n\n  const About: FC = () => {\n    return <h2>About</h2>;\n  };\n\n  const Users: FC = () => {\n    return <h2>Users</h2>;\n  };\n\n  return (\n    <Router>\n      <Layout style={{ height: '100vh' }}>\n        <Sider trigger={null} collapsible collapsed={collapsed}>\n          <div className=\"logo\">\n            <Icon type=\"home\" />\n            {collapsed ? null : <div>&ensp;野人格鬥體適能</div>}\n          </div>\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[pathname]}>\n            <Item key=\"/\">\n              <Link to=\"/\">\n                <Icon type=\"user\" />\n                <span>會員</span>\n              </Link>\n            </Item>\n            <Item key=\"/users\">\n              <Link to=\"/users\">\n                <Icon type=\"carry-out\" />\n                <span>課程</span>\n              </Link>\n            </Item>\n            <Item key=\"/about\">\n              <Link to=\"/about\">\n                <Icon type=\"info-circle\" />\n                <span>關於野人</span>\n              </Link>\n            </Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', paddingLeft: 24 }}>\n            <Icon\n              className=\"trigger\"\n              type={collapsed ? 'menu-unfold' : 'menu-fold'}\n              onClick={toggleCollapsed}\n            />\n          </Header>\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n              <Switch>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/users\">\n                  <Users />\n                </Route>\n                <Route path=\"/\">\n                  <Customer />\n                </Route>\n              </Switch>\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}